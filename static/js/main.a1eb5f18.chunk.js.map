{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","hendleChange","e","setState","serachFiels","target","value","state","fetch","then","response","json","users","this","filteredMonstered","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCLbC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SACDD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,UCHhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOC,KAAK,SACZb,UAAY,SACZW,YAAaA,EAEbG,SAAUF,MC+BCG,E,kDAlCZ,aAAe,IAAD,8BACd,gBAcHC,aAAc,SAACC,GAEb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAY,IALC,E,gEASG,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,+BAQ/B,IAAD,EACwBC,KAAKN,MAA5Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACbU,EAAoBrB,EAASsB,QAAO,SAAA3B,GAAO,OAChDA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAChD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAc,iBAAiBC,aAAcgB,KAAKZ,eAC7D,cAAC,EAAD,CAAUR,SAAYqB,W,GA7BTI,aCOJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1eb5f18.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\n\r\n\r\nexport const Card = (props) => (\r\n    <div className= 'card-container'>\r\n        <img alt=\"monster\" src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h1>{props.monster.name}</h1>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react'\r\nimport './card-list.style.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>\r\n         {props.monsters.map(monster =>\r\n          <Card key={monster.id} monster = {monster}></Card>\r\n          )}\r\n    </div>\r\n\r\n}","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input type='search' \r\n    className = 'search'\r\n    placeholder={placeholder}\r\n\r\n    onChange={handleChange}/>\r\n)","import './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport { Component } from 'react';\nimport {SearchBox} from './components/search-box/search-box.component'\n\n class App extends Component {\n   constructor() {\n   super();\n\n  this.state = {\n    monsters: [],\n    serachFiels:''\n  };\n\n}\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters:users}))\n}\n\nhendleChange =(e) =>\n{\n  this.setState({serachFiels:e.target.value})\n}\n\nrender() {\n  const { monsters, serachFiels}=this.state;\n const filteredMonstered = monsters.filter(monster => \n  monster.name.toLowerCase().includes(serachFiels.toLowerCase()));\n  return(\n    <div className='App'>\n      <h2>Monsters Roladex</h2>\n      <SearchBox placeholder = 'search monster' handleChange={this.hendleChange}/>\n      <CardList monsters = {filteredMonstered} >\n      </CardList>\n    </div>\n  )\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}